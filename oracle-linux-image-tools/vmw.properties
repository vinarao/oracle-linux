# Custom parameter for the builder
# You can set / override any parameter in this file.
# Alternatively you can use it as a template and pass the actual file as
# parameter to the builder.
# You need at least provide the mandatory parameters

#
# Mandatory parameters
#

# Workspace for the builder and location of the artifacts
WORKSPACE=/workspace
# ISO_URL -- location of the ISO file
# Can be local (file://) or remote (https://) but it must be an URL
#ISO_URL="https://yum.oracle.com/ISOS/OracleLinux/OL7/u9/x86_64/OracleLinux-R7-U9-Server-x86_64-dvd.iso"
# ISO_CHECKSUM -- checksum for the ISO file
# https://linux.oracle.com/security/gpg/checksum/OracleLinux-R7-U9-Server-x86_64.checksum
#ISO_CHECKSUM="28d2928ded40baddcd11884b9a6a611429df12897784923c346057ec5cdd1012"
ISO_URL="/etc/oracle/iso/oracle_linux_7_9.iso"
ISO_CHECKSUM="4b87b6009500f2eb81e52548c6c31f43dc60797193da7c4c47ff9381e14fff6e"
#
# Optional parameters
#

# Distribution (Default is ol7-slim)
DISTR="ol7-slim"
# Cloud provider (Default is none)
CLOUD="vmware"

# Build BUILD_NUMBER (Default is 0)
BUILD_NUMBER=4
CLOUD_INIT="Yes"

# Root access to the VM at least one method must be provided:
# Root account password (Default is empty)
SSH_PASSWORD="root"
# Path to an ssh private/public key pair (Default none). The public key will
# be installed for the root user
# SSH_KEY_FILE=
# Lock root account after provisioning? (Default: yes)
LOCK_ROOT="yes"

#
# Override examples
#

#iS Setup swap? (Yes/No, default is distribution / cloud specific)
# SETUP_SWAP=

# SELinux state (enforcing, permissive, disabled)
SELINUX="enforcing"

# Root filesystem: btrfs, xfs or lvm (Default: xfs)
ROOT_FS="xfs"

# Which kernel? (uek, rhck, modrhck, default is distribution / cloud specific)
# KERNEL=

# UEK release (distribution / cloud specific)
# UEK_RELEASE=

# Number of CPUs for the build VM (Default: 4)
CPU_NUM=4
# Memory allocated to the build VM (Default: 8192)
MEM_SIZE=8192

# Allocated disk size for the image, default is distribution / cloud specific
# DISK_SIZE_GB=

# If you experience issues when building in a nested virtualization environment,
# you can disable X2APIC in VirtualBox for the build: on/off (default: on)
# X2APIC=

# Capture serial console in serial-console.txt during Kickstart. (Yes, No,
# default: no) -- Useful for debugging Kickstart issues.
# SERIAL_CONSOLE=

# We use the full path for Hashicorp Packer from the Linux package generating tool
PACKER="/usr/bin/packer"
PACKER_BUILD_OPTIONS="-on-error=cleanup"

# If defined, override generated VM_NAME
# VM_NAME= OCB

# If your ISO_URL points to a boot iso, you need to provide:
#   - an URL to an installation tree on a remote server
#   - optionally an associative array of additional yum repositories that may
#     be used as sources for package installation.
# Example for an OL8 install:
# REPO_URL="https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64"
# REPO[AppStream]="https://yum.oracle.com/repo/OracleLinux/OL8/appstream/x86_64"
REPO_URL="http://yum-phx.oracle.com/repo/OracleLinux/OL7/latest/x86_64"
# OVM Image version (Default: 1.0)
# IMAGE_VERSION=

# OCI / OLVM:
# Install cloud-init? (Yes/No, default is Yes for OCI and No for OLVM)
# CLOUD_INIT=
# cloud-init user (Default is "opc" for OCI and "cloud-user" for OLVM)
# CLOUD_USER=
# OLVM: Custom script passed to Cloud-init (user data) -- Example:
# CUSTOM_SCRIPT="#cloud-config
# disable_root: 1"
# CUSTOM_SCRIPT=

# OLVM:
# Generates a template instead of an image? (Yes, No, default: No)
# OLVM_TEMPLATE=

# Vagrant virtualbox
# Memory and CPU to allocate to the box by default at runtime (default: same
# as build VM values)
# VAGRANT_VIRTUALBOX_MEM_SIZE=
# VAGRANT_VIRTUALBOX_CPU_NUM=
# Additional disk to attach to the VM.
# Empty means no disk, otherwhise it is the size in GB of the extra disk
# VAGRANT_VIRTUALBOX_EXTRA_DISK_GB=
# Install different Guest Additions than the ones provided by the build host.
# URL can be a local file (file:// URI)
# VAGRANT_GUEST_ADDITIONS_URL=""
# VAGRANT_GUEST_ADDITIONS_SHA256=""

# Vagrant libvirt
# Location of the vagrant libvirt create_box.sh script.
# Install the vagrant-libvirt plugin on your build machine or download the
# script from:
# https://github.com/vagrant-libvirt/vagrant-libvirt/blob/master/tools/create_box.sh
# VAGRANT_LIBVIRT_BOX_SCRIPT="${HOME}/.vagrant.d/gems/<vagrant version>/gems/vagrant-libvirt-<version>/tools/create_box.sh"
# Memory and CPU to allocate to the box by default at runtime (default: same
# as build VM values)
# VAGRANT_LIBVIRT_MEM_SIZE=
# VAGRANT_LIBVIRT_CPU_NUM=

# Vagrant all providers
# Install developer release packages (Yes/No, default: no)
# VAGRANT_DEVELOPER_REPOS=
